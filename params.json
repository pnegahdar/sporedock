{"name":"Sporedock","tagline":"","body":"SporeDock\r\n=========\r\n\r\n**Status**: Not Runable (Design Phase). WIP.\r\n\r\nSporeDock is an opinionated Docker orchestration tool that makes it easy to scale and distribute Docker apps on a multi-node/host cluster. There are lots of tools around Docker Orchestration right now (see: Deis, Flynn, Shipyard, etcd, Coreos, Fleet, Serf, Bob, vlucand, hipache, Dokku, Mesos, Mesosphere, etc) but figuring out which to use and making them work together is difficult. SporeDock makes those decisions for you.\r\n\r\n\r\n## Architecture\r\n\r\nSporeDock has 3 major components:\r\n\r\n  **Etcd** : Internode communication, Discovery, Process synchronization, Primary election\r\n\r\n  **Docker Client** : Managing Docker daemon\r\n\r\n  **vulcand** : Dynamic http load balancer\r\n\r\n\r\n  Together they give you a highly dynamic self-discovering deployment stack powered by docker.\r\n\r\n All the tools are written in Go to produce a single distributable binary that acts as both the server and client. Making cloud formations of these binaries are very easy.\r\n\r\n\r\n## Interface\r\n\r\nSet up the discovery url for nodes to discover one another on their private network\r\n\r\n     sporedock init <discovery_url>\r\n\r\nBegin sporedock daemon on the node:\r\n\r\n    sporedock start\r\n\r\n\r\n**Thats it, node is now part of cluster**\r\n\r\nSet up environments\r\n\r\n    sporedock env create <env_name>\r\n    sporedock env add -env <env_name> -key <key> -value <value>\r\n    sporedock env rm -env <env_name>\r\n\r\n\r\nDistribute Apps. Gets the apps ready to deploy on all the nodes\r\n\r\n    sporedock apps add -name <unique_app_name> -image <docker_image> -env <env_name>\r\n\r\nList Apps\r\n\r\n    sporedock apps list\r\n\r\nScale/Stop Apps. Automatically distributing them across the cluster\r\n\r\n**Web Apps**\r\n\r\n    sporedock launch_webapp <app_name> --scale <count> --host 'dev.daefs.apps.kensho.com' // Test the endpoint\r\n    sporedock addhost <app_name> --host 'staging.kensho.com'\r\n    sporedock rmhost <app_name> --host 'staging.kensho.com'\r\n\r\n**Service Apps**\r\n\r\n    sporedock launch <app_name> --scale <count>\r\n\r\n**ALL**\r\n\r\n    sporedock stop <app_name>\r\n\r\n\r\n`Web|Workers` are automatically moved around as needed to maximize their distribution. If a node binds to a webapp it will be added to Vulcan's load balancer dynamically and traffic will be routed to the correct place as the node moves around. Should a node die, all procs will be redistributed.\r\n\r\n\r\n","google":"UA-61643179-1","note":"Don't delete this file! It's used internally to help with page regeneration."}